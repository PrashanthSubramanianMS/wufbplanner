{"version":3,"sources":["components/User.jsx","components/hoc/withWindowDimensions.jsx","components/WorkFlow.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["User","state","react_default","a","createElement","style","paddingRight","this","props","userName","fontSize","roleName","Component","withWindowDimensions","WrappedComponent","_Component","_temp","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","inherits","createClass","key","value","addEventListener","removeEventListener","assign","windowWidth","windowHeight","isMobileSized","WorkFlow","handleChannelDdlChange","event","selectedChannel","target","handleProductDdlChange","selectedProduct","handleDateChange","selectedUpdateDate","handleDeferralChange","deferralDays","getStepContent","classes","step","className","centerContainer","Typography","stepTitle","display","FormControlLabel","control","Radio","color","checked","initialSelection","onChange","handleInitialSelectionChange","label","labelPlacement","Fragment","paddingTop","TextField","select","variant","margin","currentProduct","SelectProps","MenuProps","menu","helperText","products","map","option","MenuItem","channels","type","material_ui_pickers_esm","utils","DateFnsUtils","id","KeyboardButtonProps","aria-label","padding","Button","onClick","handleReset","button","marginLeft","toLocaleDateString","marginTop","isStepOptional","isStepFailed","isStepSkipped","handleNext","newActiveStep","activeStep","handleBack","handleResetToStart","tempSelection","steps","Date","Card","cardContainer","Stepper","alternativeLabel","nonLinear","index","Step","StepButton","paddingLeft","disabled","React","withStyles","theme","backgroundColor","justifyContent","alignItems","fontFamily","textField","spacing","marginRight","backButton","withTheme","MainPage","root","AppBar","position","classNames","appBar","defineProperty","appBarShift","open","Toolbar","disableGutters","grow","noWrap","components_User","content","components_WorkFlow","flexGrow","hide","App","components_MainPage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af0f92e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass User extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingRight: \"12px\" }}>\r\n        <span>{this.props.userName}</span>\r\n        <br />\r\n        <span style={{ fontSize: 9 }}>{this.props.roleName}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default function withWindowDimensions(WrappedComponent) {\r\n  return class extends Component {\r\n    state = { width: 0, height: 0 };\r\n\r\n    componentDidMount() {\r\n      this.updateWindowDimensions();\r\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          windowWidth={this.state.width}\r\n          windowHeight={this.state.height}\r\n          isMobileSized={this.state.width < 700}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport PropTypes from \"prop-types\";\r\nimport withWindowDimensions from \"./hoc/withWindowDimensions.jsx\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Radio,\r\n  Card,\r\n  Typography,\r\n  withStyles,\r\n  FormControlLabel,\r\n  Step,\r\n  Stepper,\r\n  StepButton,\r\n  TextField,\r\n  Button,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nconst styles = theme => ({\r\n  cardContainer: {\r\n    padding: 1,\r\n    height: \"40vw\",\r\n    backgroundColor: \"whitesmoke  \",\r\n    margin: 10\r\n  },\r\n  centerContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    // display: \"flex\",\r\n    // height: \"100%\"\r\n    paddingTop: 100,\r\n    paddingLeft: 100\r\n  },\r\n  stepTitle: {\r\n    fontSize: 30,\r\n    fontFamily: \"Segoe UI\",\r\n    color: \"#585b5e\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  menu: {\r\n    width: 500\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n});\r\n\r\nconst mapping = [\r\n  { SAC: \"Semi Annual Channel\", SACT: \"Semi Annual Channel - Targeted\" }\r\n];\r\n\r\nclass WorkFlow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialSelection: \"none\",\r\n      steps: [\r\n        \"What do you want to do?\",\r\n        \"What are your policies? / Choose desired update behavior\",\r\n        \"Policy Information\"\r\n      ],\r\n      activeStep: 0,\r\n      deferralDays: 30,\r\n      channels: [\r\n        { value: \"SAC\", label: \"Semi Annual Channel\" },\r\n        { value: \"SACT\", label: \"Semi Annual Channel - Targeted\" }\r\n      ],\r\n      products: [\r\n        { value: \"Windows 10 1903\", label: \"Windows 10 1903\" },\r\n        { value: \"Windows 10 1809\", label: \"Windows 10 1809\" },\r\n        { value: \"Windows 10 1803\", label: \"Windows 10 1803\" },\r\n        { value: \"Windows 10 1709\", label: \"Windows 10 1709\" },\r\n        { value: \"Windows 10 1703\", label: \"Windows 10 1703\" },\r\n        { value: \"Windows 10 1607\", label: \"Windows 10 1607\" }\r\n      ],\r\n      currentProduct: \"Windows 10 1809\",\r\n      selectedProduct: \"Windows 10 1903\",\r\n      selectedChannel: \"SAC\",\r\n      selectedUpdateDate: new Date(\"2019-12-25T12:00:00\")\r\n    };\r\n  }\r\n\r\n  handleChannelDdlChange = event => {\r\n    this.setState({ selectedChannel: event.target.value });\r\n  };\r\n\r\n  handleProductDdlChange = event => {\r\n    this.setState({ selectedProduct: event.target.value });\r\n  };\r\n\r\n  handleDateChange = event => {\r\n    this.setState({ selectedUpdateDate: event });\r\n  };\r\n\r\n  handleDeferralChange = event => {\r\n    this.setState({ deferralDays: event.target.value });\r\n  };\r\n\r\n  getStepContent = (classes, step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div className={classes.centerContainer}>\r\n            <Typography className={classes.stepTitle}>\r\n              What do you want to do?\r\n            </Typography>\r\n\r\n            <div style={{ display: \"relative\" }}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Radio\r\n                    value=\"confirm\"\r\n                    color=\"primary\"\r\n                    checked={this.state.initialSelection === \"confirm\"}\r\n                    onChange={this.handleInitialSelectionChange}\r\n                  />\r\n                }\r\n                label=\"Confirm my existing deferral policies are correct\"\r\n                labelPlacement=\"end\"\r\n              />\r\n              <br />\r\n              <FormControlLabel\r\n                control={\r\n                  <Radio\r\n                    value=\"recommend\"\r\n                    color=\"primary\"\r\n                    checked={this.state.initialSelection === \"recommend\"}\r\n                    onChange={this.handleInitialSelectionChange}\r\n                  />\r\n                }\r\n                label=\"Get deferral policy recommendations\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.centerContainer}>\r\n            {this.state.initialSelection === \"confirm\" && (\r\n              <React.Fragment>\r\n                <Typography className={classes.stepTitle}>\r\n                  What are your policies?\r\n                </Typography>\r\n                <div>\r\n                  <div style={{ paddingTop: 10 }}>\r\n                    <TextField\r\n                      select\r\n                      variant=\"outlined\"\r\n                      label=\"Current Product\"\r\n                      margin=\"normal\"\r\n                      value={this.state.currentProduct}\r\n                      onChange={this.handleProductDdlChange}\r\n                      SelectProps={{\r\n                        MenuProps: {\r\n                          className: classes.menu\r\n                        }\r\n                      }}\r\n                      helperText=\"The product version you are updating from\"\r\n                    >\r\n                      {this.state.products.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </div>\r\n                  <div style={{ paddingTop: 15 }}>\r\n                    <TextField\r\n                      select\r\n                      variant=\"outlined\"\r\n                      label=\"Update Channel\"\r\n                      margin=\"normal\"\r\n                      value={this.state.selectedChannel}\r\n                      onChange={this.handleChannelDdlChange}\r\n                      SelectProps={{\r\n                        MenuProps: {\r\n                          className: classes.menu\r\n                        }\r\n                      }}\r\n                      helperText=\"Please select the Servicing option you receive updates from\"\r\n                    >\r\n                      {this.state.channels.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </div>\r\n                  <div style={{ paddingTop: 20 }}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Deferral Days \"\r\n                      type=\"number\"\r\n                      value={this.state.deferralDays}\r\n                      onChange={this.handleDeferralChange}\r\n                      helperText=\"Your value for group policy 'Select when Feature Updates are received'\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n            {this.state.initialSelection === \"recommend\" && (\r\n              <div>\r\n                <Typography className={classes.stepTitle}>\r\n                  Select desired update behaviour\r\n                </Typography>\r\n                <div style={{ paddingTop: 20 }}>\r\n                  <Typography>I want to update on:</Typography>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"mui-pickers-date\"\r\n                      value={this.state.selectedUpdateDate}\r\n                      onChange={this.handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div style={{ paddingTop: 20 }}>\r\n                  <Typography>I want to update to:</Typography>\r\n                  <TextField\r\n                    select\r\n                    variant=\"outlined\"\r\n                    label=\"Product Version\"\r\n                    margin=\"normal\"\r\n                    value={this.state.selectedProduct}\r\n                    onChange={this.handleProductDdlChange}\r\n                    SelectProps={{\r\n                      MenuProps: {\r\n                        className: classes.menu\r\n                      }\r\n                    }}\r\n                  >\r\n                    {this.state.products.map(option => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            {this.state.initialSelection === \"confirm\" && (\r\n              <div className={classes.centerContainer}>\r\n                <Typography className={classes.stepTitle}>\r\n                  Based on your policies, you will..\r\n                </Typography>\r\n                <div style={{ padding: 20 }}>\r\n                  <Typography>\r\n                    be upgraded to \"Windows 10 1809\" on 25th December 2019\r\n                  </Typography>\r\n                  <br />\r\n                  <br />\r\n                  <Typography>\r\n                    Not what you expected?\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={this.handleReset}\r\n                      className={classes.button}\r\n                      style={{ marginLeft: 20 }}\r\n                    >\r\n                      Get policy recommendation\r\n                    </Button>\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.initialSelection === \"recommend\" && (\r\n              <div className={classes.centerContainer}>\r\n                <Typography className={classes.stepTitle}>\r\n                  Based on your selections, you should set the following\r\n                  policies..\r\n                </Typography>\r\n                <div style={{ padding: 20 }}>\r\n                  <Typography>\r\n                    Select the Semi-Annual Channel and defer Feature Updates for\r\n                    a period of <b>25</b> days\r\n                  </Typography>\r\n\r\n                  <Typography>\r\n                    This will upgrade you to {this.state.selectedProduct} on{\" \"}\r\n                    {this.state.selectedUpdateDate.toLocaleDateString()}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleReset}\r\n                    className={classes.button}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    Choose a different time/product\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  };\r\n\r\n  isStepOptional = step => {\r\n    return false;\r\n  };\r\n\r\n  isStepFailed = step => {\r\n    return false;\r\n  };\r\n\r\n  isStepSkipped = step => {\r\n    return false;\r\n  };\r\n\r\n  handleNext = () => {\r\n    let newActiveStep = this.state.activeStep + 1;\r\n    this.setState({ activeStep: newActiveStep });\r\n  };\r\n\r\n  handleBack = () => {\r\n    let newActiveStep = this.state.activeStep - 1;\r\n    this.setState({ activeStep: newActiveStep });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ initialSelection: \"recommend\", activeStep: 1 });\r\n  };\r\n\r\n  handleResetToStart = () => {\r\n    this.setState({ initialSelection: \"none\", activeStep: 0 });\r\n  };\r\n\r\n  handleInitialSelectionChange = event => {\r\n    let initialSelection = this.state.initialSelection;\r\n    let tempSelection = initialSelection;\r\n    initialSelection = event.target.value;\r\n    this.setState({ initialSelection });\r\n\r\n    if (tempSelection === \"none\") {\r\n      this.handleNext();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.cardContainer}>\r\n        <Stepper alternativeLabel nonLinear activeStep={this.state.activeStep}>\r\n          {this.state.steps.map((label, index) => {\r\n            const stepProps = {};\r\n            const buttonProps = {};\r\n\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepButton\r\n                  //onClick={this.handleStep(index)}\r\n                  //completed={this.isStepComplete(index)}\r\n                  {...buttonProps}\r\n                >\r\n                  {label}\r\n                </StepButton>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <div>\r\n          {this.getStepContent(classes, this.state.activeStep)}\r\n          {(this.state.activeStep === 1 ||\r\n            (this.state.activeStep === 0 &&\r\n              this.state.initialSelection !== \"none\")) && (\r\n            <div style={{ paddingLeft: 100, paddingTop: 20 }}>\r\n              <Button\r\n                disabled={this.state.activeStep === 0}\r\n                onClick={this.handleBack}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {this.state.activeStep === 2 && (\r\n            <div style={{ paddingLeft: 100, paddingTop: 20 }}>\r\n              <Button\r\n                disabled={this.state.activeStep === 0}\r\n                onClick={this.handleResetToStart}\r\n                className={classes.button}\r\n                color=\"primary\"\r\n              >\r\n                Start Over\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nWorkFlow.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withWindowDimensions(\r\n  withStyles(styles, { withTheme: true })(WorkFlow)\r\n);\r\n","import User from \"./User\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport WorkFlow from \"./WorkFlow\";\r\nimport withWindowDimensions from \"./hoc/withWindowDimensions.jsx\";\r\nimport { AppBar, Toolbar, Typography, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    paddingTop: 0\r\n  }\r\n});\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialSelection: \"none\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    let title = \"Windows Update Policy Planner\";\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: this.state.open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open}>\r\n            <Typography\r\n              className={classes.grow}\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              style={{ fontFamily: \"Segoe UI Symbol\", paddingLeft: 30 }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <User\r\n              userName={this.props.userName}\r\n              roleName={this.props.roleName}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <main style={{ paddingTop: 100 }} className={classes.content}>\r\n          <WorkFlow />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMainPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withWindowDimensions(\r\n  withStyles(styles, { withTheme: true })(MainPage)\r\n);\r\n","import React, { Component } from \"react\";\nimport MainPage from \"./components/MainPage\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return <MainPage userName=\"fareast\\prsub\" roleName=\"Admin\" />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}